{"version":3,"sources":["sounds/src_sounds_bell-start.mp4","sounds/src_sounds_bell-finish.mp4","utils/zero-left.ts","components/button.tsx","components/timer.tsx","utils/seconds-to-minutes.ts","components/pomodoro-timer.tsx","hooks/use-interval.tsx","utils/seconds-to-time.ts","App.tsx","index.tsx"],"names":["module","exports","zeroLeft","n","Math","floor","toLocaleString","padStart","Button","props","onClick","className","text","Timer","seconds","min","sec","secontsToMinutes","mainTime","bellStart","require","bellFinish","audioStartWorking","Audio","audioStopWorking","PomodoroTimer","useState","pomodoroTime","setMainTime","timeCounting","setTimeCounting","working","setWorking","resting","setResting","Array","cycles","fill","cyclesQdtManager","setCyclesQdtManager","compledCycles","setCompletedCycles","fullWorkingTime","setFullWorkingTime","numberOfPomodoros","setNumberOfPomodoros","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","configureWork","useCallback","play","configureRest","Long","longRestTime","shortRestTime","document","body","classList","add","remove","length","pop","hours","secontsToTimes","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6a51b41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/src_sounds_bell-start.16adcf7d.mp4\";","module.exports = __webpack_public_path__ + \"static/media/src_sounds_bell-finish.0f576fc3.mp4\";","const zeroLeft = (n: number): string =>\n  Math.floor(n).toLocaleString().padStart(2, '0');\n\nexport { zeroLeft };\n","import React from 'react';\n\ninterface Props {\n  text: string;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport function Button(props: Props): JSX.Element {\n  return (\n    <>\n      <button onClick={props.onClick} className={props.className}>\n        {props.text}\n      </button>\n    </>\n  );\n}\n","import React from 'react';\nimport { secontsToMinutes } from '../utils/seconds-to-minutes';\n\ninterface Props {\n  mainTime: number;\n}\n\nexport function Timer(props: Props): JSX.Element {\n  return <div className=\"timer\">{secontsToMinutes(props.mainTime)}</div>;\n}\n","import { zeroLeft } from './zero-left';\n\nexport function secontsToMinutes(seconds: number): string {\n  const min = zeroLeft((seconds / 60) % 60);\n  const sec = zeroLeft((seconds % 60) % 60);\n\n  return `${min}:${sec}`;\n}\n","import React from 'react';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useInterval } from '../hooks/use-interval';\nimport { secontsToTimes } from '../utils/seconds-to-time';\nimport { Button } from './button';\nimport { Timer } from './timer';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bellStart = require('../sounds/src_sounds_bell-start.mp4');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bellFinish = require('../sounds/src_sounds_bell-finish.mp4');\n\nconst audioStartWorking = new Audio(bellStart);\nconst audioStopWorking = new Audio(bellFinish);\n\ninterface Props {\n  pomodoroTime: number;\n  shortRestTime: number;\n  longRestTime: number;\n  cycles: number;\n}\n\nexport function PomodoroTimer(props: Props): JSX.Element {\n  const [mainTime, setMainTime] = useState(props.pomodoroTime);\n  const [timeCounting, setTimeCounting] = useState(false);\n  const [working, setWorking] = useState(false);\n  const [resting, setResting] = useState(false);\n  const [cyclesQdtManager, setCyclesQdtManager] = useState(\n    new Array(props.cycles - 1).fill(true),\n  );\n\n  const [compledCycles, setCompletedCycles] = useState(0);\n  const [fullWorkingTime, setFullWorkingTime] = useState(0);\n  const [numberOfPomodoros, setNumberOfPomodoros] = useState(0);\n\n  useInterval(\n    () => {\n      setMainTime(mainTime - 1);\n      if (working) setFullWorkingTime(fullWorkingTime + 1);\n    },\n    timeCounting ? 1000 : null,\n  );\n\n  const configureWork = useCallback(() => {\n    setTimeCounting(true);\n    setWorking(true);\n    setResting(false);\n    setMainTime(props.pomodoroTime);\n    audioStartWorking.play();\n  }, [\n    setTimeCounting,\n    setWorking,\n    setResting,\n    setMainTime,\n    props.pomodoroTime,\n  ]);\n\n  const configureRest = useCallback(\n    (Long: boolean) => {\n      setTimeCounting(true);\n      setWorking(false);\n      setResting(true);\n      setMainTime(props.pomodoroTime);\n\n      if (Long) {\n        setMainTime(props.longRestTime);\n      } else {\n        setMainTime(props.shortRestTime);\n      }\n\n      audioStopWorking.play();\n    },\n    [\n      setTimeCounting,\n      setWorking,\n      setResting,\n      setMainTime,\n      props.longRestTime,\n      props.shortRestTime,\n    ],\n  );\n\n  useEffect(() => {\n    if (working) document.body.classList.add('working');\n    if (resting) document.body.classList.remove('working');\n\n    if (mainTime > 0) return;\n\n    if (working && cyclesQdtManager.length > 0) {\n      configureRest(false);\n      cyclesQdtManager.pop();\n    } else if (working && cyclesQdtManager.length <= 0) {\n      configureRest(true);\n      setCyclesQdtManager(new Array(props.cycles - 1).fill(true));\n      setCompletedCycles(compledCycles + 1);\n    }\n\n    if (working) setNumberOfPomodoros(numberOfPomodoros + 1);\n    if (resting) configureWork();\n  }, [\n    working,\n    resting,\n    mainTime,\n    cyclesQdtManager,\n    numberOfPomodoros,\n    compledCycles,\n    configureWork,\n    configureRest,\n    setCyclesQdtManager,\n    configureWork,\n    props.cycles,\n  ]);\n\n  return (\n    <div className=\"pomodoro\">\n      <h2>Você está: {working ? 'Trabalhando' : 'Descansando'}</h2>\n      <Timer mainTime={mainTime}></Timer>\n      <div className=\"controls\">\n        <Button text=\"Trabalhar\" onClick={() => configureWork()}></Button>\n        <Button text=\"Descansar\" onClick={() => configureRest(false)}></Button>\n        <Button\n          className={!working && !resting ? 'hidden' : ''}\n          text={timeCounting ? 'Pausar' : 'Retornar'}\n          onClick={() => setTimeCounting(!timeCounting)}\n        ></Button>\n      </div>\n\n      <div className=\"details\">\n        <p>Ciclos concluídos: {compledCycles}</p>\n        <p>Horas trabalhadas: {secontsToTimes(fullWorkingTime)}</p>\n        <p>Pomodoros concluídos: {numberOfPomodoros}</p>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback: () => void, delay: number | null): void {\n  const savedCallback = useRef(callback);\n\n  // Remember the latest callback if it changes.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    if (delay === null) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import { zeroLeft } from './zero-left';\n\nexport function secontsToTimes(seconds: number): string {\n  const hours = zeroLeft(seconds / 3600);\n  const min = zeroLeft((seconds / 60) % 60);\n  const sec = zeroLeft((seconds % 60) % 60);\n\n  return `${hours}:${min}:${sec}`;\n}\n","import React from 'react';\nimport { PomodoroTimer } from './components/pomodoro-timer';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"container\">\n      <PomodoroTimer\n        pomodoroTime={2700}\n        shortRestTime={900}\n        longRestTime={1800}\n        cycles={4}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}